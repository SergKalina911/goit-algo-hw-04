""" 
                                        Друге завдання

    У вас є текстовий файл, який містить інформацію про котів. Кожен рядок файлу містить унікальний
ідентифікатор кота, його ім'я та вік, розділені комою.

Наприклад:

60b90c1c13067a15887e1ae1,Tayson,3
60b90c2413067a15887e1ae2,Vika,1
60b90c2e13067a15887e1ae3,Barsik,2
60b90c3b13067a15887e1ae4,Simon,12
60b90c4613067a15887e1ae5,Tessi,5

    Ваше завдання - розробити функцію get_cats_info(path), яка читає цей файл та повертає список
словників з інформацією про кожного кота.

                        Вимоги до завдання:

1. Функція get_cats_info(path) має приймати один аргумент - шлях до текстового файлу (path).
2. Файл містить дані про котів, де кожен запис містить унікальний ідентифікатор, ім'я кота та його вік.
3. Функція має повертати список словників, де кожен словник містить інформацію про одного кота.

                        Рекомендації для виконання:

1. Використовуйте with для безпечного читання файлу.
2. Пам'ятайте про встановлення кодування при відкриті файлів
3. Для кожного рядка в файлі використовуйте split(',') для отримання ідентифікатора, імені та віку кота.
4. Утворіть словник з ключами "id", "name", "age" для кожного кота та додайте його до списку, який буде повернуто.
5. Опрацьовуйте можливі винятки, пов'язані з читанням файлу.

                        Критерії оцінювання:

1. Функція має точно обробляти дані та повертати правильний список словників.
2. Повинна бути належна обробка винятків і помилок.
3. Код має бути чистим, добре структурованим і зрозумілим.

                        Приклад використання функції:

cats_info = get_cats_info("path/to/cats_file.txt")
print(cats_info)

                        Очікуваний результат:

[
    {"id": "60b90c1c13067a15887e1ae1", "name": "Tayson", "age": "3"},
    {"id": "60b90c2413067a15887e1ae2", "name": "Vika", "age": "1"},
    {"id": "60b90c2e13067a15887e1ae3", "name": "Barsik", "age": "2"},
    {"id": "60b90c3b13067a15887e1ae4", "name": "Simon", "age": "12"},
    {"id": "60b90c4613067a15887e1ae5", "name": "Tessi", "age": "5"},
]
"""
def get_cats_info(path):
    """
    Читає файл, що містить інформацію про котів, та повертає список словників з деталями кожного кота.
    
    :param path: str - Шлях до текстового файлу з інформацією про котів.
    :return: list - Список словників з інформацією про котів. Кожен словник містить 'id', 'name' та 'age'.
"""
    # Ініціалізуємо список для зберігання інформації про котів
    cats_info = []
    
    try:
        # Відкриваємо файл для читання
        with open(path, 'r', encoding='utf-8') as file:
            # Читаємо кожен рядок файлу
            for line in file:
                # Очищаємо рядок від пробілів і символів нового рядка
                line = line.strip()
                # Перевіряємо, що рядок не порожній
                if line:  
                    # Розділяємо рядок на частини за комою
                    id_, name, age = line.split(',')
                    # Додаємо словник з інформацією про кота до списку
                    cats_info.append({"id": id_, "name": name, "age": age})
    # Обробка можливих винятків
    except FileNotFoundError:
        print(f"Файл не знайдено: {path}")
    except Exception as e:
        print(f"Помилка: {e}")

    return cats_info
# Застосуємо функцію для отримання інформації про котів з файлу Text_for_task2.txt, який створимо у тій
#  же директорії, що й цей скрипт.
if __name__ == "__main__":
    cats_info = get_cats_info("./Text_for_task2.txt")
    print(cats_info)